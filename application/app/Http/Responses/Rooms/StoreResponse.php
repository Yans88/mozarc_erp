<?php/** -------------------------------------------------------------------------------- * This classes renders the response for the [store] process for the team * controller * @package    Grow CRM * @author     NextLoop *----------------------------------------------------------------------------------*/namespace App\Http\Responses\Rooms;use Illuminate\Contracts\Support\Responsable;use Log;class StoreResponse implements Responsable {    private $payload;    public function __construct($payload = array()) {        $this->payload = $payload;    }    /**     * render the view for team members     *     * @param  \Illuminate\Http\Request  $request     * @return \Illuminate\Http\Response     */    public function toResponse($request) {        //set all data to arrays        foreach ($this->payload as $key => $value) {            $$key = $value;        }				$html ='<div class="body-room" id="body-room">';		$cnt = count($chats);		$max_id =0 ;		if((int)$cnt > 0){						foreach($chats as $chat){				$max_id = $chat->chatroom_id;				$img = isset($chat->avatar_filename) ? url('/storage/avatars/'.$chat->avatar_directory.'/'.$chat->avatar_filename) : url('/storage/avatars/system/default_avatar.jpg');				$html .= '<article class="feed">            <section class="feeds-user-avatar">                <img src="'.$img.'" alt="'.$chat->first_name.'" width="40">                              </section>            <section class="feed-content">                <section class="feed-user-info">                    <h4>'.$chat->first_name.' <span class="time-stamp">'.date_format(date_create($chat->chatroom_created),'H:i').'</span></h4>                </section>                <p>'.clean($chat->message).'</p>                                                    </section>        </article>';			}					}		$html .='<input type="hidden" value="'.$max_id.'" name="max_id" id="max_id"/></div>';				$jsondata['dom_html'][] = array(            'selector' => '#body-room',            'action' => 'replace',            'value' => $html);        //notice        $jsondata['notification'] = array('type' => 'success', 'value' => __('lang.request_has_been_completed'));        //response        return response()->json($jsondata);    }}