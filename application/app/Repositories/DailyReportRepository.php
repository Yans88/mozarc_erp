<?php/** -------------------------------------------------------------------------------- * This repository class manages all the data absctration for units * * @package    Grow CRM * @author     NextLoop *----------------------------------------------------------------------------------*/namespace App\Repositories;use App\Models\DailyReports;use Illuminate\Http\Request;use Log;class DailyReportRepository  {    /**     * The groups repository instance.     */    protected $dailyreports;    /**     * Inject dependecies     */    public function __construct(DailyReports $dailyreports) {        $this->dailyreports = $dailyreports;    }    /**     * Search model     * @param int $id optional for getting a single, specified record     * @return object unit collection     */    public function search($id = '') {        $dailyreports = $this->dailyreports->newQuery();        //joins        //$units->leftJoin('users', 'users.id', '=', 'units.unit_creatorid');        // all client fields        $dailyreports->selectRaw('*');        if (is_numeric($id)) {            $dailyreports->where('dailyreport_id', $id);        }        //default sorting        $dailyreports->orderBy('dailyreport_created', 'desc');        // Get the results and return them.        return $dailyreports->paginate(config('system.settings_system_pagination_limits'));    }	    /**     * Create a new record     * @return mixed int|bool     */    public function create($id=0) {        if((int)$id > 0){			if (!$dailyreports = $this->dailyreports->find($id)) {				return false;			}		}else{			$dailyreports = new $this->dailyreports;		}                //data        $dailyreports->your_day_general = request('your_day_general');            $dailyreports->your_goal_today = request('your_goal_today');            $dailyreports->your_schedules = request('your_schedules');            $dailyreports->your_task_description = request('your_task_description');            $dailyreports->you_feel_good_today = request('you_feel_good_today');            $dailyreports->you_learned_today = request('you_learned_today');            $dailyreports->any_issues_today = request('any_issues_today');            $dailyreports->you_willdo_bebetter = request('you_willdo_bebetter');            $dailyreports->overall_comment = request('overall_comment');            $dailyreports->dailyreport_creatorid = auth()->id();            //save and return id        if ($dailyreports->save()) {            return $dailyreports->dailyreport_id;        } else {            return false;        }    }   }