<?php/** -------------------------------------------------------------------------------- * This repository class manages all the data absctration for units * * @package    Grow CRM * @author     NextLoop *----------------------------------------------------------------------------------*/namespace App\Repositories;use App\Models\MeetingMinutes;use Illuminate\Http\Request;use Log;class MeetingMinutesRepository  {    /**     * The groups repository instance.     */    protected $meetingminutes;    /**     * Inject dependecies     */    public function __construct(MeetingMinutes $meetingminutes) {        $this->meetingminutes = $meetingminutes;    }    /**     * Search model     * @param int $id optional for getting a single, specified record     * @return object unit collection     */    public function search($id = '') {        $meetingminutes = $this->meetingminutes->newQuery();        //joins        //$units->leftJoin('users', 'users.id', '=', 'units.unit_creatorid');        // all client fields        $meetingminutes->selectRaw('*');        if (is_numeric($id)) {            $meetingminutes->where('meetingminutes_id', $id);        }        //default sorting        $meetingminutes->orderBy('meetingminutes_created', 'desc');        // Get the results and return them.        return $meetingminutes->paginate(config('system.settings_system_pagination_limits'));    }	    /**     * Create a new record     * @return mixed int|bool     */    public function create($id=0) {        if((int)$id > 0){			if (!$meetingminutes = $this->meetingminutes->find($id)) {				return false;			}		}else{			$meetingminutes = new $this->meetingminutes;		}                //data        $meetingminutes->meetingminutes_title = request('meetingminutes_title');            $meetingminutes->meetingminutes_description = request('meetingminutes_description');                $meetingminutes->meetingminutes_creatorid = auth()->id();            //save and return id        if ($meetingminutes->save()) {            return $meetingminutes->meetingminutes_id;        } else {            return false;        }    }   }