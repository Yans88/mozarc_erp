<?php/** -------------------------------------------------------------------------------- * This repository class manages all the data absctration for units * * @package    Grow CRM * @author     NextLoop *----------------------------------------------------------------------------------*/namespace App\Repositories;use App\Models\Rooms;use Illuminate\Http\Request;use Log;class RoomRepository  {    /**     * The groups repository instance.     */    protected $rooms;    /**     * Inject dependecies     */    public function __construct(Rooms $rooms) {        $this->rooms = $rooms;    }    /**     * Search model     * @param int $id optional for getting a single, specified record     * @return object unit collection     */    public function search($id = '') {        $rooms = $this->rooms->newQuery();        //joins        $rooms->leftJoin('users', 'users.id', '=', 'chat_room.user_id');        // all client fields        $rooms->selectRaw('*');        if (is_numeric($id)) {            $rooms->where('groupemployee_id', $id);        }        //default sorting        $rooms->orderBy('chatroom_created', 'ASC');        // Get the results and return them.        return $rooms->paginate(100000);    }	    /**     * Create a new record     * @return mixed int|bool     */    public function create($id=0) {        if((int)$id > 0){			if (!$rooms = $this->rooms->find($id)) {				return false;			}		}else{			$rooms = new $this->rooms;		}                //data        $rooms->user_id = auth()->id();            $rooms->message = request('message');            $rooms->groupemployee_id = request('groupemployee_id');                    //save and return id        if ($rooms->save()) {            return $rooms->chatroom_id;        } else {            return false;        }    }   }